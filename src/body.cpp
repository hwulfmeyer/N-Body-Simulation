////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// Copyright (C) 2016/17      wulfihm, https://github.com/wulfihm/
///
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "body.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
// user constructor
////////////////////////////////////////////////////////////////////////////////////////////////////
Body::Body(float m, vec3 p, vec3 v) : 
	mass(m), 
	position(p), 
	velocity(p) 
{ }


////////////////////////////////////////////////////////////////////////////////////////////////////
// adds the force from body k as velocity to the body
////////////////////////////////////////////////////////////////////////////////////////////////////
void 
Body::addForceVelocity(Body k) {
	vec3 dir = this->position - k.position;
	float dist = dir.x*dir.x + dir.y*dir.y + dir.z*dir.z;  // L^2-Norm without root
	this->velocity += dir * k.mass / (dist + EPS*EPS);
}


////////////////////////////////////////////////////////////////////////////////////////////////////
// updates the position of the body in reference to the timespan dt and the gravitational constant
////////////////////////////////////////////////////////////////////////////////////////////////////
void
Body::updatePosition(float dt) {
	this->position += dt * this->velocity * G;
	this->velocity = vec3(0, 0, 0);
}